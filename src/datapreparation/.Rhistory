# create pivot table
df_pivot <- df %>% dcast(date ~ neighbourhood, fun.aggregate = sum, value.var = "num_reviews")
# export results
write.csv(df_pivot, "pivot_table.csv")
# import the data from `gen/analysis/pivot_table`
df_pivot <- read.csv("pivot_table.csv")
# convert the `date` column into date format.
df_pivot$date <- as.Date(df_pivot$date)
pdf("plot_Antwerp.pdf")
plot(x = df_pivot$date,
y = df_pivot$Universiteitsbuurt,
col = "red",
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic on Airbnb review count")
lines(df_pivot$date, df_pivot$Sint.Andries, col="blue")
lines(df_pivot$date, df_pivot$Centraal.Station, col="green")
legend("topleft", c("Universiteitsbuurt", "Sint Andries", "Centraal Station"), fill=c("red", "blue", "green"))
dev.off()
# import the data from `gen/data-preparation/aggregated_df.csv`
df <- read.csv("aggregated_df.csv")
# convert the `date` column into date format.
df$date <- as.Date(df$date)
# group by date and calculate the sum of all reviews across neighbourhoods.
df_groupby <- df %>% group_by(date) %>% summarise(num_reviews = sum(num_reviews))
# plot the chart and store the visualisation.
pdf("plot_all.pdf")
plot(x = df_groupby$date,
y = df_groupby$num_reviews,
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic on Airbnb review count")
dev.off()
library(dplyr)
library(reshape2)
.libPaths()
library(dplyr)
library(reshape2)
######################
### DOWNLOAD DATA ####
######################
download_data <- function(url, filename){
download.file(url = url, destfile = paste0(filename, ".csv"))
}
url_listings <- "http://data.insideairbnb.com/belgium/vlg/antwerp/2021-02-25/visualisations/listings.csv"
url_reviews <- "http://data.insideairbnb.com/belgium/vlg/antwerp/2021-02-25/visualisations/reviews.csv"
download_data(url_listings, "listings")
download_data(url_reviews, "reviews")
library(dplyr)
library(reshape2)
# create date column
df_grouped$date <- as.Date(paste0(df_grouped$year, "-", df_grouped$month, "-01"))
# store the final data frame in `gen/data-preparation` as `aggregated_df.csv`
write.csv(df_grouped, "aggregated_df.csv")
######################
# CREATE PIVOT TABLE #
######################
# import the data from `gen/data-preparation/aggregated_df.csv`
df <- read.csv("aggregated_df.csv")
# create pivot table
df_pivot <- df %>% dcast(date ~ neighbourhood, fun.aggregate = sum, value.var = "num_reviews")
# export results
write.csv(df_pivot, "pivot_table.csv")
library(dplyr)
library(reshape2)
######################
# CREATE PIVOT TABLE #
######################
# import the data from `gen/data-preparation/aggregated_df.csv`
df <- read.csv("aggregated_df.csv")
# create pivot table
df_pivot <- df %>% dcast(date ~ neighbourhood, fun.aggregate = sum, value.var = "num_reviews")
# export results
write.csv(df_pivot, "pivot_table.csv")
library(dplyr)
library(reshape2)
######################
### PLOT ANTWERP ####
######################
# import the data from `gen/analysis/pivot_table`
df_pivot <- read.csv("pivot_table.csv")
# convert the `date` column into date format.
df_pivot$date <- as.Date(df_pivot$date)
pdf("plot_Antwerp.pdf")
plot(x = df_pivot$date,
y = df_pivot$Stadspark,
col = "red",
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic on Airbnb review count")
lines(df_pivot$date, df_pivot$Sint.Andries, col="blue")
lines(df_pivot$date, df_pivot$Centraal.Station, col="green")
legend("topleft", c("Stadspark", "Sint Andries", "Centraal Station"), fill=c("red", "blue", "green"))
dev.off()
library(dplyr)
library(reshape2)
######################
##### PLOT ALL #######
######################
# import the data from `gen/data-preparation/aggregated_df.csv`
df <- read.csv("aggregated_df.csv")
# convert the `date` column into date format.
df$date <- as.Date(df$date)
# group by date and calculate the sum of all reviews across neighbourhoods.
df_groupby <- df %>% group_by(date) %>% summarise(num_reviews = sum(num_reviews))
# plot the chart and store the visualisation.
pdf("plot_all.pdf")
plot(x = df_groupby$date,
y = df_groupby$num_reviews,
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic on Airbnb review count")
dev.off()
.libPaths()
library(dplyr)
library(reshape2)
# import the data from `gen/temp/aggregated_df.csv`
df <- read.csv("gen/temp/aggregated_df.csv")
knitr::opts_chunk$set(echo = TRUE)
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create bar plot
counts <- table(all_data$room_type)
counts
barplot(counts, main="Room type",
col = c("cadetblue3", "cadetblue1","coral3", "coral1" ),
xlab = "Room type",
ylab = "Number of objects",
legend = c("Entire home/apt", "Hotel room", "Private room", "Shared room"),
args.legend = list(title = "Room type", x = "topright",
cex = .7)  )
pdf("../../gen/datapreparation/output/roomtype_count_barplot.pdf")
pdf("../../gen/data-preparation/output/roomtype_count_barplot.pdf")
barplot(counts, main="Room type",
col = c("cadetblue3", "cadetblue1","coral3", "coral1" ),
xlab = "Room type",
ylab = "Number of objects",
legend = c("Entire home/apt", "Hotel room", "Private room", "Shared room"),
args.legend = list(title = "Room type", x = "topright",
cex = .7)  )
dev.off()
# Create bar plot
counts <- table(all_data$room_type)
counts
pdf("../../gen/data-preparation/output/roomtype_count_barplot.pdf")
barplot(counts, main="Room type",
col = c("cadetblue3", "cadetblue1","coral3", "coral1" ),
xlab = "Room type",
ylab = "Number of objects",
legend = c("Entire home/apt", "Hotel room", "Private room", "Shared room"),
args.legend = list(title = "Room type", x = "topright",
cex = .7)  )
dev.off()
div.off()
dev.off()
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create bar plot
counts <- table(all_data$room_type)
counts
pdf("../../gen/data-preparation/output/roomtype_count_barplot.pdf")
barplot(counts, main="Room type",
col = c("cadetblue3", "cadetblue1","coral3", "coral1" ),
xlab = "Room type",
ylab = "Number of objects",
legend = c("Entire home/apt", "Hotel room", "Private room", "Shared room"),
args.legend = list(title = "Room type", x = "topright",
cex = .7)  )
barplot(counts, main="Room type",
col = c("cadetblue3", "cadetblue1","coral3", "coral1" ),
xlab = "Room type",
ylab = "Number of objects",
legend = c("Entire home/apt", "Hotel room", "Private room", "Shared room"),
args.legend = list(title = "Room type", x = "topright",
cex = .7)  )
dev.off()
# Load libraries
library(dplyr)
# Load libraries
library(dplyr)
library(tibble)
library(ggplot2)
library(lubridate)
# Create new data file as a table for dates
dm <- read.table(text = listings0821$host_since, header = FALSE)
dm$V1 <- ymd(dm$V1)
dm$V2 <- as.Date(dm$V1, "%m/%d/%Y")
dm$V2 <- format(dm$V2, "%Y")
# Create a newe data frame from the table
df_table <- as.data.frame(table(dm$V2))
# Transform V1 into a numeric
df_table$Var1 <- as.numeric(levels(df_table$Var1))[df_table$Var1]
# Plot
ggplot(df_table, aes(x=Var1, y=Freq)) +
geom_line( color="steelblue") +
geom_point() +
xlab("Year") +
ylab("Number of hosts") +
ggtitle("Number of hosts per year") +
scale_x_continuous(breaks = df_table$Var1) +
theme_minimal() +
theme(axis.text.x=element_text(angle=60, hjust=1))
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
barplot(counts, main="Host is superhost",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "Host is superhost", x = "topright",
cex = .7))
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
barplot(counts, main="The identity of host verified",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "The identity of host verified", x = "topright",
cex = .7))
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="The identity of host verified",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "The identity of host verified", x = "topright",
cex = .7))
dev.off()
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="The identity of host verified",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "The identity of host verified", x = "topright",
cex = .7))
dev.off()
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="Host is superhost",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "Host is superhost", x = "topright",
cex = .7))
dev.off()
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="Host is superhost",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "Host is superhost", x = "topright",
cex = .7))
dev.off()
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="Host is superhost",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "Host is superhost", x = "topright",
cex = .7))
dev.off()
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="Host is superhost",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "Host is superhost", x = "topright",
cex = .7))
dev.off()
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Load the data
all_data <- read.csv(file = '../../gen/data-preparation/input/merged_data.csv')
# Create barplot
counts <- table(all_data$host_is_superhost)
counts
counts <- counts[-1]
pdf("../../gen/data-preparation/output/host_super_plot.pdf")
barplot(counts, main="Host is superhost",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "Host is superhost", x = "topright",
cex = .7))
dev.off()
pdf("../../gen/data-preparation/output/host_identity_plot.pdf")
barplot(counts, main="The identity of host verified",
col = c(border="#69b3a2", col="white"),
xlab = "True or False",
ylab = "Number of objects",
legend = c("False", "True"),
args.legend = list(title = "The identity of host verified", x = "topright",
cex = .7))
dev.off()
library(dplyr)
library(reshape2)
library(dplyr)
library(reshape2)
download_data <- function(url, filename){
download.file(url = url, destfile = paste0(filename, ".csv"))
}
url_listings <- "http://data.insideairbnb.com/spain/catalonia/barcelona/2021-09-10/visualisations/listings.csv"
url_reviews <- "http://data.insideairbnb.com/spain/catalonia/barcelona/2021-09-10/visualisations/reviews.csv"
download_data(url_listings, "listings")
download_data(url_reviews, "reviews")
dir.create('../data/', recursive = T)
dir.create('../../data/', recursive = T)
dir.create('../../data/', recursive = T)
dir.create('../../data/', recursive = T)
library(dplyr)
library(reshape2)
download_data <- function(url, filename){
download.file(url = url, destfile = paste0(filename, ".csv"))
}
url_listings <- "http://data.insideairbnb.com/spain/catalonia/barcelona/2021-09-10/visualisations/listings.csv"
url_reviews <- "http://data.insideairbnb.com/spain/catalonia/barcelona/2021-09-10/visualisations/reviews.csv"
listings <- download_data(url_listings, "listings")
reviews <- download_data(url_reviews, "reviews")
dir.create('../../data/', recursive = T)
dir.create('../../data', recursive = T)
dir.create('../data', recursive = T)
setwd("~/Master Marketing Analytics/Skills Data/Data Prep/Real Exam/exam/src/datapreparation")
dir.create('../../data', recursive = T)
download_data(url_listings, "../../data/listings")
download_data(url_reviews, "../../data/reviews")
library(dplyr)
library(reshape2)
reviews <- read.csv("../../data/reviews.csv")
listings <- read.csv("../../data/listings.csv")
# convert date column
reviews$date <- as.Date(reviews$date)
# filter for reviews published since...
reviews_filtered <- reviews %>% filter(date > "2015-01-01")
# filter for `listings` that have received at least ... reviews.
listings_filtered <- listings %>% filter(number_of_reviews > 1)
# merge the `reviews` and `listings` dataframes on a common columns (the type of join doesn't really matter since we already filtered out listings without any reviews)
df_merged <- reviews_filtered %>%
inner_join(listings_filtered, by = c("listing_id" = "id"))
# group the number of reviews by month and neighborhood.
df_grouped <- df_merged %>%
mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%
group_by(year, month, neighbourhood) %>%
summarise(num_reviews = n())
# create date column
df_grouped$date <- as.Date(paste0(df_grouped$year, "-", df_grouped$month, "-01"))
#save df_grouped
dir.create('../../gen/datapreparation', recursive = T)
dir.create('../../gen/datapreparation/input', recursive = T)
write.csv(df_merged, "../../gen/datapreparation/input/df_merged.csv", row.names = FALSE)
df_merged <- read.csv("../../data/datapreparation/input/df_merged.csv")
df_merged <- read.csv("../../data/datapreparation/input/df_merged.csv")
setwd("~/Master Marketing Analytics/Skills Data/Data Prep/Real Exam/exam/src/datapreparation")
df_merged <- read.csv("../../data/datapreparation/input/df_merged.csv")
library(dplyr)
library(reshape2)
df_merged <- read.csv("../../data/datapreparation/input/df_merged.csv")
df_merged <- read.csv("../../gen/datapreparation/input/df_merged.csv")
# group the number of reviews by month and neighborhood.
df_grouped <- df_merged %>%
mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%
group_by(year, month, neighbourhood) %>%
summarise(num_reviews = n())
# create date column
df_grouped$date <- as.Date(paste0(df_grouped$year, "-", df_grouped$month, "-01"))
#save df_grouped
dir.create('../../gen/datapreparation/output/', recursive = T)
write.csv(df_grouped, "../../gen/datapreparation/output/df_grouped.csv", row.names = FALSE)
setwd("~/Master Marketing Analytics/Skills Data/Data Prep/Real Exam/exam/src/analysis")
#load df_grouped file
df_grouped <- read.csv("../../gen/datapreparation/output/df_grouped.csv")
# create pivot table
df_pivot <- df_grouped %>% dcast(date ~ neighbourhood, fun.aggregate = sum, value.var = "num_reviews")
#save df_pivot as file
write.csv(df_pivot, "../../gen/analysis/input/df_pivot.csv")
#save df_pivot as file
dir.create('../../gen/analysis/input/', recursive = T)
write.csv(df_pivot, "../../gen/analysis/input/df_pivot.csv")
#load pivot table
df_pivot <- read.csv("../../gen/analysis/input/df_pivot.csv")
# convert the `date` column into date format.
df_pivot$date <- as.Date(df_pivot$date)
pdf("plot.pdf")
plot(x = df_pivot$date,
y = df_pivot$`la Barceloneta`,
col = "red",
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic\non Airbnb review count")
lines(df_pivot$date, df_pivot$`Porta`, col="blue")
lines(df_pivot$date, df_pivot$`Navas`, col="green")
legend("topleft", c("La Barceloneta", "Porta", "Navas"), fill=c("red", "blue", "green"))
pdf("../../gen/analysis/output/plot.pdf")
dir.create("../../gen/analysis/output")
pdf("../../gen/analysis/output/plot.pdf")
plot(x = df_pivot$date,
y = df_pivot$`la Barceloneta`,
col = "red",
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic\non Airbnb review count")
lines(df_pivot$date, df_pivot$`Porta`, col="blue")
lines(df_pivot$date, df_pivot$`Navas`, col="green")
legend("topleft", c("La Barceloneta", "Porta", "Navas"), fill=c("red", "blue", "green"))
dev.off()
# import the data
df <- read.csv("../../gen/datapreparation/output/df_grouped.csv")
# convert the `date` column into date format.
df$date <- as.Date(df$date)
# group by date and calculate the sum of all reviews across neighbourhoods.
df_groupby <- df %>% group_by(date) %>% summarise(num_reviews = sum(num_reviews))
# plot the chart and store the visualisation.
pdf("../../gen/analysis/output/plot_all.pdf")
plot(x = df_groupby$date,
y = df_groupby$num_reviews,
type = "l",
xlab = "",
ylab = "Total number of reviews",
main = "Effect of COVID-19 pandemic\non Airbnb review count")
dev.off()
setwd("~/")
setwd("~/Master Marketing Analytics/Skills Data/Data Prep/Real Exam/exam/src/datapreparation")
df_merged <- read.csv("../../gen/datapreparation/input/df_merged.csv")
# group the number of reviews by month and neighborhood.
df_grouped <- df_merged %>%
mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%
group_by(year, month, neighbourhood) %>%
summarise(num_reviews = n())
# create date column
df_grouped$date <- as.Date(paste0(df_grouped$year, "-", df_grouped$month, "-01"))
df_merged <- read.csv("../../gen/datapreparation/input/df_merged.csv")
# group the number of reviews by month and neighborhood.
df_grouped <- df_merged %>%
mutate(month = format(date, "%M"), year = format(date, "%Y")) %>%
group_by(year, month, neighbourhood) %>%
summarise(num_reviews = n())
# create date column
df_grouped$date <- as.Date(paste0(df_grouped$year, "-", df_grouped$month, "-01"))
View(df_merged)
# convert date column
df_merged$date <- as.Date(df_merged$date)
# group the number of reviews by month and neighborhood.
df_grouped <- df_merged %>%
mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%
group_by(year, month, neighbourhood) %>%
summarise(num_reviews = n())
# create date column
df_grouped$date <- as.Date(paste0(df_grouped$year, "-", df_grouped$month, "-01"))
#save df_grouped
dir.create('../../gen/datapreparation/output/', recursive = T)
write.csv(df_grouped, "../../gen/datapreparation/output/df_grouped.csv", row.names = FALSE)
library(ggplot2)
library(reshape2)
